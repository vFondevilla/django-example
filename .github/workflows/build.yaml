# Build and push to ECR
name: Build and push to ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          IMAGE: ${{ secrets.IMAGE }}
          REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          aws ecr create-repository --repository-name $IMAGE --region $REGION || true

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG app/
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Deploy
        run: |
          curl -X POST https://api.github.com/repos/lessthanthreetech/cheerfy-terraform/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -H 'Authorization: ${{ secrets.PAT }}' \
          --data '{"event_type": "beta", "client_payload": { "commit": "head" } }}'